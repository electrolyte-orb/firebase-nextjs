import Head from 'next/head';
import { auth, db } from '../lib/firebase-admin';
import type {
	GetServerSideProps,
	GetServerSidePropsContext,
	InferGetServerSidePropsType,
} from 'next';
import nookies from 'nookies';
interface Data {
	data: {
		msg: string;
		docs?: {
			data: string;
		}[];
	};
}

export const getServerSideProps: GetServerSideProps<Data> = async (
	ctx: GetServerSidePropsContext
) => {
	let data;

	try {
		const cookies = nookies.get(ctx);
		const token = await auth.verifyIdToken(cookies.token);

		const { uid, email } = token;
		const snapshot = await db
			.collection('docs-collection')
			.where('writer.email', '==', email)
			.where('writer.uid', '==', uid)
			.orderBy('createdAt', 'desc')
			.get();

		if (snapshot.empty) {
			data = {
				msg: `You have not written any comment.`,
			};
		} else {
			const docs: any[] = [];

			snapshot.forEach((doc) => {
				docs.push({ data: doc.data().msg });
			});

			data = {
				msg: `Here are your messages, ${email}`,
				docs,
			};
		}
	} catch (err) {
		data = {
			msg: 'Some error occured in authentication ' + JSON.stringify(err),
		};
	}

	return {
		props: {
			data,
		},
	};
};

function Auth({
	data,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
	return (
		<div>
			<Head>
				<title>Firebase with Next.js</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<h1>Hello world</h1>
			<h2>{data.msg}</h2>
			{data.docs ? (
				<div>{data.docs.forEach(({ data }) => data)}</div>
			) : (
				'you have no posts yet'
			)}
		</div>
	);
}

export default Auth;
